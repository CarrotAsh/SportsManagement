@startuml

class Tournament{
    - String name;
    - LocalDate startDate;
    - LocalDate endDate;
    - String league;
    - String sport;
    - String category;
    - List<Participant> participants
    - List<Matchmake> matchs
    + getName()
    + getCategory()
    + getParticipants()
    + getMatchs()
    + inProgress()
    + isFinish()
    + TournamentAdd(String[] arguments)
    + TournamentCreate(String[] arguments)
    + TournamentDelete(String[] arguments)
    + TournamentList(String[] arguments)
    + TournamentMatchmaking(String[] arguments)
    + TournamentRemove(String[] arguments)
}

class Player{
   - String name
   - String surname
   - String DNI
   - String team
   - Double score
   - Double withMatch
   - Double assistScore
   - Double tournamentsWin
   - Double moneyWin
   + PlayerCreate(String[] arguments)
   + PlayerDelete(String[] arguments)
   + getName()
   + getScore()
   + getWinMatch()
   + getAssistScore()
   + getTournamentsWin()
   + getMoneyWin()
   + toString()
}

class Matchmake{
    - Participant[] match
    + getMatch()
    + addParticipant(Participant participant, int p)
    + toString()
}

class Team{
    - String name;
    - List<Player> playersTeam
    - List<Tournament> tournamentsRegistered
    + Team(String name)
    + getName()
    + getScore()
    + getWinMatch()
    + getAssistScore()
    + getTournamentsWin()
    + getMoneyWin()
    + getPlayersTeam()
    + getTournamentsRegistered()
    + TeamAdd(String[] arguments)
    + TeamRemove(String[] arguments)
    + TeamCreate(String[] arguments)
    + TeamDelete(String[] arguments)
}

class User{
    - String userName
    - String password
    + User(String userName,String password)
    + getUserName()
    + getPassword()
}

class Administrator{
    + Administrator(String userName, String password)

}


Tournament *-down-> Team
Tournament *-down-> Player
Team *-down-> Player
Tournament -down-> Matchmake
Matchmake -down-> Team
Matchmake -down-> Player
User <|.down. Administrator
User <|.down. Player
@enduml