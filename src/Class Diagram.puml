@startuml
class SportManagement{
    + {static} void main(String[] args)
}
class OptionsMenu{
    - {static} List<Administrator> administrators
    - {static} List<Player> players
    - {static} List<Team> teams
    - {static} List<Tournament> tournaments
    - {static} List<Command> commands
    - {static} User loggedUser
    + {static} void start()
    + {static} List<Administrator> getAdministrators()
    + {static} List<Player> getPlayers()
    + {static} List<Team> getTeams()
    + {static} List<Tournament> getTournaments()
    + {static} List<Command> getCommands()
    + {static} User getLoggedUser()
    + {static} void setLoggedUser(User loggedUser)
}
class SettingsDefault{
    + {static} void loadData()
}

interface Nameable{
    + String getName()
}

interface Participant{
    + Double getPuntuation(String category)
}
class Tournament{
    - String name
    - LocalDate startDate
    - LocalDate endDate
    - String league
    - String sport
    - String category
    - List<Participant> participants
    - List<Matchmake> matchs
    + String getName()
    + String getCategory()
    + List<Participant> getParticipants()
    + List<Matchmake> getMatchs()
    + boolean inProgress()
    + boolean isFinish()
}

class Player{
   - String name
   - String surname
   - String DNI
   - HashMap<String, Double> puntuation
   - String team
   - List<Tournament> tournamentsRegistered
   + String getName()
   + double getPuntuation(String category)
   + String getTeam()
   + void setTeam(String team)
   + List<Tournament> getTournamentsRegistered()
   + String toString()
}

class Matchmake{
    - Participant[] match
    + Participant[] getMatch()
    + void addParticipant(Participant participant, int p)
    + void toString()
}

class Team{
    - String name
    - List<Player> playersTeam
    - List<Tournament> tournamentsRegistered
    + getName()
    + getPuntuation()
    + getPlayersTeam()
    + getTournamentsRegistered()
}

class User{
    - String userName
    - String password
    + String getUserName()
    + String getPassword()
}

class Administrator{

}

class Command{
    - String name
    + String getName()
    # boolean existInList(String name, List<T> list)
    # int getPositionInList(String name, List<T> list)
    # boolean withoutMatchInTournament(String name, List<Matchmake> list)
    {abstract} void execute(String[] arguments)
}

class Login{
    + void execute()
}

class Logout{
    + void execute()
}

class PlayerCreate{
    + void execute()
}

class PlayerDelete{
    + void execute()
}

class StatisticsShow{
    + void execute()
}

class TeamAdd{
    + void execute()
}

class TeamCreate{
    + void execute()
}
class TeamDelete{
    + void execute()
}
class TeamRemove{
    + void execute()
}
class TournamentAdd{
    + void execute()
}
class TournamentCreate{
    + void execute()
}
class TournamentDelete{
    + void execute()
}
class TournamentList{
    + void execute()
}
class TournamentMatchMaking{
    + void execute()
}
class TournamentRemove{
    + void execute()
}

SportManagement -right-> OptionsMenu
Nameable <|.down. Tournament
OptionsMenu *-down- Administrator
OptionsMenu *-down- Player
OptionsMenu *-down- Team
OptionsMenu *-down- Tournament
OptionsMenu *-down- Command
OptionsMenu *-down- User
OptionsMenu -right-> SettingsDefault
Nameable <|.down. Participant
Tournament o-down-> Participant
Matchmake o-down-> Participant
Team o-down-> Player
Participant <|.down. Player
Participant <|.down. Team
Tournament *-down- Matchmake
Player o-down-> Tournament
Team o-down-> Tournament
User <|-down- Administrator
Nameable <.down. Command
User <|-down- Player
Command <|-down- Login
Command <|-down- Logout
Command <|-down- PlayerCreate
Command <|-down- PlayerDelete
Command <|-down- StatisticsShow
Command <|-down- TeamAdd
Command <|-down- TeamCreate
Command <|-down- TeamDelete
Command <|-down- TeamRemove
Command <|-down- TournamentAdd
Command <|-down- TournamentCreate
Command <|-down- TournamentDelete
Command <|-down- TournamentList
Command <|-down- TournamentMatchMaking
Command <|-down- TournamentRemove
TournamentList .down.> Participant

@enduml